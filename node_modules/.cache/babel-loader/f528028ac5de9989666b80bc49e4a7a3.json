{"ast":null,"code":"var _jsxFileName = \"D:\\\\practices\\\\food-ordring\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CartContext from './CartContext';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.item.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + AuthenticatorAmount.item.price + action.item.price;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemCartHandler,\n    removeItem: removeItemCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/practices/food-ordring/src/Store/CartProvider.js"],"names":["React","CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","item","concat","updatedTotalAmount","AuthenticatorAmount","price","CartProvider","props","cartState","dispatchCartAction","addItemCartHandler","removeItemCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,UAAR,QAAyB,OAAzB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAG;AAFO,CAAzB;;AAIA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAAX,CAAkBJ,MAAM,CAACG,IAAzB,CAArB;AACI,UAAME,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBS,mBAAmB,CAACH,IAApB,CAAyBI,KAA7C,GAAqDP,MAAM,CAACG,IAAP,CAAYI,KAA5F;AACP;;AAEL,SAAOZ,gBAAP;AACH,CAPD;;AAQA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCjB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AACA,QAAMiB,kBAAkB,GAAIT,IAAD,IAAS;AAChCQ,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAGA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMU,qBAAqB,GAAIC,EAAD,IAAO;AACjCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAG,QAAR;AAAmBa,MAAAA,EAAE,EAAEA;AAAvB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAE;AACfnB,IAAAA,KAAK,EAAGc,SAAS,CAACd,KADH;AAEfC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFR;AAGfmB,IAAAA,OAAO,EAAEJ,kBAHM;AAInBK,IAAAA,UAAU,EAAEJ;AAJO,GAAnB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnBD;;GAAMV,Y;;KAAAA,Y;AAqBN,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport CartContext from './CartContext'\r\nimport {useReducer} from 'react'\r\n\r\nconst defaultCartState = {\r\n    items :[],\r\n    totalAmount : 0\r\n}\r\nconst cartReducer =(state, action) => {\r\n        if (action.type === \"ADD\" ){\r\n            const updatedItems = state.item.concat(action.item)\r\n                const updatedTotalAmount = state.totalAmount + AuthenticatorAmount.item.price + action.item.price\r\n        }\r\n\r\n    return defaultCartState \r\n}\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\r\n    const addItemCartHandler = (item) =>{\r\n        dispatchCartAction({type: 'ADD', item : item})\r\n    }\r\n    const removeItemCartHandler = (id) =>{\r\n        dispatchCartAction({type : 'REMOVE' , id: id})\r\n    }\r\n    const cartContext ={\r\n        items : cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemCartHandler,\r\n    removeItem: removeItemCartHandler\r\n    }\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n"]},"metadata":{},"sourceType":"module"}